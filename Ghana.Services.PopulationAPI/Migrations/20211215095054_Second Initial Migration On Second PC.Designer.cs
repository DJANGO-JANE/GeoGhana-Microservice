// <auto-generated />
using System;
using Ghana.Services.PopulationAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ghana.Services.PopulationAPI.Migrations
{
    [DbContext(typeof(PopulationContext))]
    [Migration("20211215095054_Second Initial Migration On Second PC")]
    partial class SecondInitialMigrationOnSecondPC
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.City", b =>
                {
                    b.Property<int>("CityCode")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PopulationId")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CityCode");

                    b.HasIndex("PopulationId");

                    b.HasIndex("RegionCode");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Locality", b =>
                {
                    b.Property<int>("ConstID")
                        .HasColumnType("int");

                    b.Property<int>("CityCode")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocalityCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PopulationId")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ConstID");

                    b.HasIndex("CityCode");

                    b.HasIndex("PopulationId");

                    b.HasIndex("RegionCode");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Population", b =>
                {
                    b.Property<int>("PopulationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Citizens")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElderlyFemale")
                        .HasColumnType("int");

                    b.Property<int>("ElderlyMale")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("PopulationId");

                    b.ToTable("Population");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Region", b =>
                {
                    b.Property<string>("RegionCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CapitalCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PopulationId")
                        .HasColumnType("int");

                    b.HasKey("RegionCode");

                    b.HasIndex("PopulationId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.City", b =>
                {
                    b.HasOne("Ghana.Services.PopulationAPI.Models.Population", "Population")
                        .WithMany()
                        .HasForeignKey("PopulationId");

                    b.HasOne("Ghana.Services.PopulationAPI.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Population");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Locality", b =>
                {
                    b.HasOne("Ghana.Services.PopulationAPI.Models.City", "City")
                        .WithMany("Localities")
                        .HasForeignKey("CityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghana.Services.PopulationAPI.Models.Population", "Population")
                        .WithMany()
                        .HasForeignKey("PopulationId");

                    b.HasOne("Ghana.Services.PopulationAPI.Models.Region", "Region")
                        .WithMany("Localities")
                        .HasForeignKey("RegionCode");

                    b.Navigation("City");

                    b.Navigation("Population");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Region", b =>
                {
                    b.HasOne("Ghana.Services.PopulationAPI.Models.Population", "Population")
                        .WithMany()
                        .HasForeignKey("PopulationId");

                    b.Navigation("Population");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.City", b =>
                {
                    b.Navigation("Localities");
                });

            modelBuilder.Entity("Ghana.Services.PopulationAPI.Models.Region", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Localities");
                });
#pragma warning restore 612, 618
        }
    }
}
